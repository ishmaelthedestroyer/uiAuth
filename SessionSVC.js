// Generated by CoffeeScript 1.4.0
(function() {

  define(['app'], function(app) {
    return app.factory('Session', [
      '$rootScope', '$http', '$q', function($rootScope, $http, $q) {
        var apply, authenticated, loadSession, session;
        session = {};
        authenticated = false;
        loadSession = function(override) {
          var deferred, promise;
          deferred = $q.defer();
          promise = deferred.promise;
          if (!session || override) {
            $http.get('/api/session').success(function(data, status, headers, config) {
              return deferred.resolve(data);
            }).error(function(data, status, headers, config) {
              return deferred.resolve({});
            });
          } else {
            deferred.resolve(session);
          }
          return promise;
        };
        apply = function(scope, fn) {
          $rootScope.$emit('session', session);
          if (scope.$$phase || scope.$root.$$phase) {
            return fn();
          } else {
            return scope.$apply(fn);
          }
        };
        loadSession().then(function(data) {
          return apply($rootScope, function() {
            return session = data;
          });
        });
        return {
          load: function() {
            return loadSession(false);
          },
          refresh: function() {
            return loadSession(true);
          },
          isAuthenticated: function() {
            return authenticated;
          },
          login: function(username, password) {
            var deferred;
            deferred = $q.defer();
            $http.post('/api/login', {
              username: username,
              password: password
            }).success(function(data, status, headers, config) {
              session = data;
              return apply($rootScope, function() {
                authenticated = true;
                return deferred.resolve(true);
              });
            }).error(function(data, status, headers, config) {
              session = {};
              return apply($rootScope, function() {
                authenticated = false;
                return deferred.reject(false);
              });
            });
            return deferred.promise;
          },
          logout: function() {
            var deferred;
            deferred = $q.defer();
            $http.get('/api/logout').success(function(data, status, headers, config) {
              session = {};
              return apply($rootScope, function() {
                authenticated = false;
                return deferred.resolve(true);
              });
            }).error(function(data, status, headers, config) {
              session = {};
              return apply($rootScope, function() {
                authenticated = false;
                return deferred.reject(false);
              });
            });
            return deferred.promise;
          }
        };
      }
    ]);
  });

}).call(this);
